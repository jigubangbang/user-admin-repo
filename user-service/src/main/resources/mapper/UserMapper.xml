<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jigubangbang.user_service.mapper.UserMapper">
    <!-- Security 인증용 사용자 정보 조회 -->
    <select id="findAuthById" resultType="com.jigubangbang.user_service.model.AuthDto">
        SELECT
            user_id AS id,
            password,
            role,
            user_status AS status
        FROM user
        WHERE user_id = #{userId}
    </select>

    <!-- 일반 사용자 정보 조회 -->
    <select id="findUserById" resultType="com.jigubangbang.user_service.model.UserDto">
        SELECT
            user_id AS id,
            name,
            role
        FROM user
        WHERE user_id = #{userId}
    </select>

    <!-- 회원가입 -->
    <insert id="insertUser" parameterType="com.jigubangbang.user_service.model.RegisterRequestDto">
        INSERT INTO user (
            user_id,
            password,
            name,
            nickname,
            email,
            tel,
            agreed_required,
            agreed_optional,
            provider,
            provider_id
        ) VALUES (
            #{userId},
            #{password},
            #{name},
            #{nickname},
            #{email},
            #{tel},
            #{agreedRequired},
            #{agreedOptional},
            #{provider},
            #{providerId}
        )
    </insert>

    <!-- 아이디 중복 확인 -->
    <select id="existsByUserId" resultType="boolean">
        SELECT EXISTS (
            SELECT 1 FROM user WHERE user_id = #{userId}
        )
    </select>

    <!-- 이메일 중복 확인 -->
    <select id="existsByEmail" resultType="boolean">
        SELECT EXISTS (
            SELECT 1 FROM user WHERE email = #{email}
        )
    </select>

    <!-- 이메일로 사용자 조회 (소셜 로그인) -->
    <select id="findByEmail" resultType="com.jigubangbang.user_service.model.UserDto">
        SELECT
            user_id AS id,
            name,
            role
        FROM user
        WHERE email = #{email}
    </select>

    <!-- 이름 + 이메일로 사용자 조회 (아이디 찾기) -->
    <select id="findByNameAndEmail" resultType="com.jigubangbang.user_service.model.FindIdResponseDto">
        SELECT
            user_id AS userId,
            provider
        FROM user
        WHERE name = #{name}
        AND email = #{email}
    </select>
</mapper>
